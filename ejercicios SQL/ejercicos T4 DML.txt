-- !1

-- Obtén todos los datos de los alumnos.
select * from alum2425;
--select * from alumnos;

-- Obtén los siguientes datos de alumnos: DNI, NOMBRE, APELLIDOS, CURSO, NIVEL y CLASE.
select dni, nombre, apellidos,curso,nivel,clase from alum2425;

-- Obtén todos los datos de alumnos cuya población sea 'GUADALAJARA'.
select * from alum2425 
	where poblacion= 'GUADALAJARA';

-- Obtén el NOMBRE y APELLIDOS de todos los alumnos cuya población sea 'GUADALAJARA'
select nombre, apellidos from alum2425
	where poblacion= 'GUADALAJARA';

-- Consulta el DNI, NOMBRE, APELLIDOS, CURSO, NIVEL y CLASE de todos los alumnos ordenado por APELLIDOS y NOMBRE ascendentemente.

select dni, nombre, apellidos, curso,nivel, clase from alum2425
order by 3,2 asc;


-- !2

select * from notas_alumnos;

-- Obtener aquellos nombres de alumnos que tengan un 7 en NOTA1 y cuya media sea mayor que 6.

select nombre_alumno, nota1 from notas_alumnos
	where nota1=7
    and (nota1 + nota2 + nota3)/3 >6;


-- !3

-- Obtener los ejemplares de los libros cuyo tema sea 'LABORES'. Usa el operador'=' y el operador LIKE. Compara los resultados

select * from libreria;

select * from libreria
where tema = 'LABORES';

SELECT * FROM libreria
WHERE tema LIKE '%LABORES%';

-- Visualiza el tema, estante y ejemplares de los libros con un número de ejemplares comprendidos entre 8 y 15

select * from libreria
where (ejemplares>8 and ejemplares<15)
order by 3;


-- Visualiza el tema, estante y ejemplares de los libros cuyo estante no esté comprendido entre la "B" y la "D".

select * from libreria
where estante not in ('B','C','D')
order by 2;

-- Visualiza los temas cuyo número de ejemplares no esté entre 15 y 20, ambos incluidos

select tema,ejemplares from libreria
where ejemplares not in (15,16,17,18,19,20)
order by 2;

-- !4

-- Visualiza todas las asignaturas que contengan tres letras "o" en su interior y tengan alumnos matriculados de "Madrid"

select asignaturas.cod, asignaturas.nombre "Asignatura" , alumnos.APENOM, alumnos.POBLA
from asignaturas, notas, alumnos
where asignaturas.cod = notas.cod and notas.dni = alumnos.dni
     and asignaturas.nombre like '%o%o%o%'
    and POBLA = 'Madrid';


-- Visualiza los nombres de alumnos de "Madrid" que tengan alguna asignatura suspendida

select asignaturas.cod, asignaturas.nombre, notas.nota ,alumnos.APENOM, alumnos.POBLA
from asignaturas, notas, alumnos
where notas.dni = alumnos.dni
    and notas.nota < 5
    and asignaturas.cod = notas.cod 
    and POBLA = 'Madrid' ;

>[!NOTE] >falla

-- Obtén el nombre y apellido de los alumnos que tengan nota en la asignatura con código 1.

select asignaturas.cod, notas.nota , 
  SUBSTR(alumnos.APENOM, 1, INSTR(alumnos.APENOM, ',') - 1) 'Apellido',
  SUBSTR(alumnos.APENOM, INSTR(alumnos.APENOM, ',') + 2) 'Nombre'
from asignaturas, notas, alumnos
where notas.cod = 1
    and (asignaturas.cod = notas.cod and notas.dni = alumnos.dni);

-- Visualiza los nombres de alumnos que tengan una nota entre 7 y 8 en la asignatura de "FOL".

select SUBSTR(alumnos.APENOM, INSTR(alumnos.APENOM, ',') + 2) "Nombre", notas.nota, asignaturas.NOMBRE
from alumnos,notas,asignaturas
where asignaturas.NOMBRE = 'FOL'
	and notas.nota between 7 and 8 
    and asignaturas.cod = notas.cod
    and notas.dni = alumnos.dni;


---------------------------------------------------------------------------

-- Cara2

-- !2

select * from EMPLE;
select round (avg (salario), 2) "Media de salario" from emple;

select count (COMISION) "nº comisiones no nulas" from emple;

select max(salario) "Salario maximo", min (salario) "Salario minimo" 
from emple
	where dept_no = 30;

-- !3

SELECT RPAD(REPLACE(titulo, '"', ''), 43, '.') 
FROM MISTEXTOS;

-- !4

SELECT LOWER(REPLACE(REPLACE(titulo, '"', ''), '.', '')) 
FROM MISTEXTOS;

-- !5

select autor "Autor",SUBSTR (autor,1, instr(autor,',') -1)"Apellido"
from libros;

-- !6

select autor "Autor", SUBSTR (autor,instr(autor,',') +1 )"Nombre"
from libros;

--------------------------------------------------------------------------

Hoja 4:

-- 1.1

select emple.apellido, count (emple.dept_no)
from emple
group by emple.apellido
having count (emple.dept_no)>4;

-- 1.2

select depart.dept_no, depart.dnombre, count(*) "Nº de empleados" from depart,emple
where depart.dept_no=emple.dept_no
group by depart.dept_no, depart.dnombre
having count(*) = (select max(count(*)) 
    from depart,emple 
    where depart.dept_no=emple.dept_no
    group by depart.dept_no, depart.dnombre)

-- 1.3

select emple.oficio, depart.dnombre, sum(emple.salario) "Suma de salarios" from depart, emple
where depart.dept_no = emple.dept_no  
group by emple.oficio, depart.dnombre
    having depart.dnombre = 'VENTAS';



-- 1.4 NO HACER

select emple.apellido 
from emple
	where emple.salario = (
    	select avg(e2.salario)
    	from emple e2
    	where e2.dept_no=emple.dept_no
    ); 


-- 1.5 


select depart.dnombre, emple.oficio, count(*)"Nº empleados" from depart, emple
where depart.dept_no = emple.dept_no  
group by depart.dnombre, emple.oficio
having emple.oficio = 'EMPLEADO'

--1.6. Desde de la tabla EMPLE, visualiza el departamento que tenga más empleados cuyo oficio sea 'EMPLEADO'

select depart.dnombre, emple.oficio,count(*) "Nº de empleados" from depart, emple
where depart.dept_no = emple.dept_no  
and emple.oficio = 'EMPLEADO'
group by depart.dnombre,emple.oficio
having count(*) = (select max(count(*)) from depart, emple
    where depart.dept_no = emple.dept_no  
    and emple.oficio = 'EMPLEADO'
group by depart.dnombre,emple.oficio)

--1.7. A partir de las tablas EMPLE y DEPART, visualiza el numero de departamento y el nombre de departamento que tenga más empleados cuyo oficio sea 'EMPLEADO'.

select depart.dept_no, depart.dnombre, count(*) "Nº de empleados"
from depart, emple
where depart.dept_no = emple.dept_no
and emple.oficio = 'EMPLEADO'
group by depart.dept_no, depart.dnombre
having count(*) = ( select max(count(*))
        from  depart, emple
        where depart.dept_no = emple.dept_no
        and emple.oficio = 'EMPLEADO'
        group by depart.dept_no)


-- 1.8

select depart.dnombre,emple.oficio, count (*) "nº trabajadores"
from depart,emple
	where depart.dept_no=emple.dept_no
group by  depart.dnombre,emple.oficio
    having count(*)>2
order by 3;
    

-- 2.1

select alum.nombre
from alum, antiguos, nuevos
where alum.nombre = antiguos.nombre
and alum.nombre = nuevos.nombre;


o 

select nombre from alum
INTERSECT
select nombre from nuevos
INTERSECT
select nombre from antiguos;

-- 2.3

select nombre from alum
MINUS
select nombre from nuevos
MINUS 
select nombre from antiguos;


--3.1

select centros.nombre, CENTROS.cod_centro,PROFESORES.especialidad ,count (PROFESORES.especialidad) "Nº profes"
from CENTROS,PROFESORES
where CENTROS.cod_centro = PROFESORES.cod_centro (+)
group by CENTROS.cod_centro, PROFESORES.especialidad, centros.nombre
order by 2;

--3.2

select centros.cod_centro, count (personal.dni)
from centros
left join personal on centros.cod_centro = personal.cod_centro
group by  centros.cod_centro;


	Ó
select centros.nombre,centros.cod_centro, count (personal.cod_centro) "nº empleados"
from centros, personal
where centros.cod_centro = personal.cod_centro (+)
group by  centros.nombre,centros.cod_centro
order by 2;


-----------
 
-- Hoja 5

--4.1

select bancos.nombre_banc "Nombre Banco", count(sucursales.cod_banco) "Nº Sucursales"
from bancos, sucursales
where sucursales.cod_banco = bancos.cod_banco
group by bancos.nombre_banc
having count (sucursales.cod_banco) = (

    select max(count(sucursales.cod_banco))
	from sucursales, bancos
    where sucursales.cod_banco = bancos.cod_banco
    group by bancos.nombre_banc
);


-- 4.2


select bancos.nombre_banc "Nombre Banco", sum (CUENTAS.saldo_debe) "Saldo Debe", sum (CUENTAS.saldo_haber) "Saldo Haber"
from bancos, cuentas, sucursales
where bancos.cod_banco = cuentas.cod_banco
and sucursales.cod_sucur =cuentas.cod_sucur
and bancos.poblacion = 'GUADALAJARA'
group by bancos.nombre_banc;

-- 4.3 

select MOVIMIENTOS.NUM_CTA "Numero Cuenta", count (MOVIMIENTOS.NUM_CTA) "Nº Movimientos"
from MOVIMIENTOS
group by MOVIMIENTOS.NUM_CTA
having count(MOVIMIENTOS.NUM_CTA)= (

	select max(count(MOVIMIENTOS.NUM_CTA))
    from MOVIMIENTOS
	group by MOVIMIENTOS.NUM_CTA
    
);


--4.4. Obtén el nombre de la sucursal que haya tenido más suma de reintegros: Nombre sucursal, suma reintegros
select sucursales.nombre_suc, sum(movimientos.importe) "Suma reintegros" from sucursales, movimientos
where sucursales.cod_sucur = movimientos.cod_sucur
    and movimientos.tipo_mov like '%R%'
group by sucursales.nombre_suc
    having sum(movimientos.importe) = (select max(sum(movimientos.importe)) 
    from sucursales, movimientos
    where sucursales.cod_sucur = movimientos.cod_sucur
    and movimientos.tipo_mov like '%R%'
    group by sucursales.nombre_suc);

-------------------------------------------------------------------------------------------
PAgina 6 SUbConsultas

--1.1
select count (*) "Nº apellidos que empieze por A" from EMPLE where APELLIDO in (
  select APELLIDO from EMPLE where APELLIDO like 'A%'
);

-- 1.2
select APELLIDO from EMPLE where APELLIDO  in (
  select APELLIDO from EMPLE where APELLIDO like 'A%' 
)
and SALARIO = (
    select max(SALARIO) from EMPLE where APELLIDO like 'A%' 

);

-- 1.3
select APELLIDO,OFICIO,SALARIO,FECHA_ALT 
from EMPLE
where OFICIO = (
    select OFICIO from EMPLE where apellido = 'JIMENEZ'
)or SALARIO >= (
    select SALARIO from EMPLE where apellido = 'FERNANDEZ'
    );

--1.4
select APELLIDO,OFICIO 
from EMPLE
where oficio = (
  select  oficio from EMPLE where APELLIDO = 'JIMENEZ'
);

--1.5
select APELLIDO,SALARIO,DEPT_NO
from EMPLE
where SALARIO in (
  select max(SALARIO) from EMPLE group by  DEPT_NO
)order by 3;

--1.6
select e1.APELLIDO,e1.SALARIO,e1.DEPT_NO
from EMPLE e1
where SALARIO > (
  select avg(e2.SALARIO) from EMPLE e2 where e1.DEPT_NO= e2.DEPT_No
);

--1.7
select EMPLE.APELLIDO,EMPLE.OFICIO,EMPLE.SALARIO
from EMPLE 
where EMPLE.DEPT_NO =  (
  select EMPLE.DEPT_NO from EMPLE where EMPLE.APELLIDO = 'FERNANDEZ'
) and EMPLE.SALARIO = (
    select SALARIO
    from EMPLE
    where EMPLE.APELLIDO = 'FERNANDEZ'
);
--1.8  
(SIN SUBCONSULTA)
select EMPLE.APELLIDO,EMPLE.OFICIO,DEPART.LOC
from EMPLE,DEPART
where DEPART.DEPT_NO = EMPLE.DEPT_NO
and EMPLE.OFICIO = 'ANALISTA';
(CON SUBCONSULTA)
SELECT DEPART.LOC, DEPART.DEPT_NO
FROM DEPART
WHERE EXISTS (
    SELECT * 
    FROM EMPLE
	WHERE EMPLE.OFICIO = 'ANALISTA'
	AND EMPLE.DEPT_NO = DEPART.DEPT_NO
);


--1.9
select * from EMPLE
where DIR in (
    select EMP_NO from EMPLE where APELLIDO = 'CEREZO'
);

-1.10
select * from EMPLE
where DEPT_NO in (
    select DEPT_NO from DEPART where DNOMBRE = 'VENTAS'
);

-- 1.11
select * from depart
where depart.DEPT_NO not in (select emple.DEPT_NO from emple where OFICIO = 'EMPLEADO');

--1.12
select * from depart
where depart.DEPT_NO not in (select emple.DEPT_NO from emple where OFICIO = 'EMPLEADO');

--1.13
select APELLIDO,SALARIO from EMPLE where SALARIO in (
  select max(SALARIO)from EMPLE where DEPT_NO = 20
);

-- 2.1
select ASIGNATURAS.NOMBRE
from ASIGNATURAS
where not exists (
    select * from NOTAS where NOTAS.NOTA <5 and NOTAS.COD=ASIGNATURAS.COD
);


-- 2.2
select ASIGNATURAS.NOMBRE
from ASIGNATURAS
where not exists (
    select * from NOTAS where notas.cod = asignaturas.cod
);

-- 2.3
SELECT * FROM ALUMNOS
WHERE not exists (select * from notas where notas.cod = 1 and notas.dni = alumnos.dni);

-- 3.1
select * from libreria 
where ejemplares < (select ejemplares from libreria where tema = 'MEDICINA');

-- 3.2
select * from libreria
where ejemplares = (select max(ejemplares) from libreria
    				where tema like '%E%');

--------------------------------------------------------------

Cara 7

--1.1
INSERT INTO emple (EMP_NO, apellido, oficio, dir, fecha_alt, salario, comision, dept_no)
VALUES (
    2000,
    'SAAVEDRA',
    (SELECT oficio FROM emple WHERE apellido = 'SALA'),
    (SELECT dir FROM emple WHERE apellido = 'SALA'),
    SYSDATE,
    (SELECT salario * 1.20 FROM emple WHERE apellido = 'SALA'),
    (SELECT comision FROM emple WHERE apellido = 'SALA'),
    (SELECT dept_no FROM emple WHERE apellido = 'SALA')
);

--1.2
update emple
set SALARIO = SALARIO + 100,
 	COMISION = COMISION + 10
where DEPT_NO = 10;

-- 1.3
UPDATE emple
SET dept_no = (
    SELECT max(dept_no)
    FROM emple
    WHERE oficio = 'EMPLEADO'
)
WHERE apellido = 'SAAVEDRA';

--1.4
DELETE FROM depart
WHERE dept_no IN (
    SELECT d.dept_no
    FROM depart d
    LEFT JOIN emple e ON d.dept_no = e.dept_no
    GROUP BY d.dept_no
    HAVING COUNT(e.empno) = 0
);

-- 2.1
insert into  ALUM
values (select * from NUEVOS);

--2.2
delete from alum 
where NOMBRE in (select NOMBRE from antiguos);

--3.1
update centros 
set NUM_PLAZAS =NUM_PLAZAS/2
where cod_centro in(select count (cod_centro) from personal  group by cod_centro having cod_centro <2);

--3.2 
update CENTROS
set NUM_PLAZAS = NUM_PLAZAS/2
where cod_centro in(
    select cod_centro 
    from PROFESORES 
    group by cod_centro 
    having count(cod_centro)<2 
);

--3.3.Elimina los centros que no tengan personal.

delete centros
where cod_centro not exists (
    SELECT cod_centro
	FROM personal
	GROUP BY cod_centro
	HAVING COUNT(*) > 0
);

-- 3.4
INSERT INTO personal (dni, APELLIDOS, FUNCION, COD_CENTRO)
SELECT '8790055', 'Clara Salas', 'IDIOMA', COD_CENTRO
FROM personal
WHERE FUNCION = 'ADMINISTRATIVO'
GROUP BY COD_CENTRO
HAVING COUNT(*) = 1;

--3.5
delete from personal
where cod_centro in (select cod_centro from CENTROS where NUM_PLAZAS>=300 ) 
and cod_centro in ( select cod_centro from PROFESORES group by  cod_centro having count (*)<2 );

-- 3.6
delete from PROFESORES
where dni not in (select dni from PERSONAL );
