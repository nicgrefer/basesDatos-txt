-- !1

-- Obtén todos los datos de los alumnos.
select * from alum2425;
--select * from alumnos;

-- Obtén los siguientes datos de alumnos: DNI, NOMBRE, APELLIDOS, CURSO, NIVEL y CLASE.
select dni, nombre, apellidos,curso,nivel,clase from alum2425;

-- Obtén todos los datos de alumnos cuya población sea 'GUADALAJARA'.
select * from alum2425 
	where poblacion= 'GUADALAJARA';

-- Obtén el NOMBRE y APELLIDOS de todos los alumnos cuya población sea 'GUADALAJARA'
select nombre, apellidos from alum2425
	where poblacion= 'GUADALAJARA';

-- Consulta el DNI, NOMBRE, APELLIDOS, CURSO, NIVEL y CLASE de todos los alumnos ordenado por APELLIDOS y NOMBRE ascendentemente.

select dni, nombre, apellidos, curso,nivel, clase from alum2425
order by 3,2 asc;


-- !2

select * from notas_alumnos;

-- Obtener aquellos nombres de alumnos que tengan un 7 en NOTA1 y cuya media sea mayor que 6.

select nombre_alumno, nota1 from notas_alumnos
	where nota1=7
    and (nota1 + nota2 + nota3)/3 >6;


-- !3

-- Obtener los ejemplares de los libros cuyo tema sea 'LABORES'. Usa el operador'=' y el operador LIKE. Compara los resultados

select * from libreria;

select * from libreria
where tema = 'LABORES';

SELECT * FROM libreria
WHERE tema LIKE '%LABORES%';

-- Visualiza el tema, estante y ejemplares de los libros con un número de ejemplares comprendidos entre 8 y 15

select * from libreria
where (ejemplares>8 and ejemplares<15)
order by 3;


-- Visualiza el tema, estante y ejemplares de los libros cuyo estante no esté comprendido entre la "B" y la "D".

select * from libreria
where estante not in ('B','C','D')
order by 2;

-- Visualiza los temas cuyo número de ejemplares no esté entre 15 y 20, ambos incluidos

select tema,ejemplares from libreria
where ejemplares not in (15,16,17,18,19,20)
order by 2;

-- !4

-- Visualiza todas las asignaturas que contengan tres letras "o" en su interior y tengan alumnos matriculados de "Madrid"

select asignaturas.cod, asignaturas.nombre "Asignatura" , alumnos.APENOM, alumnos.POBLA
from asignaturas, notas, alumnos
where asignaturas.cod = notas.cod and notas.dni = alumnos.dni
     and asignaturas.nombre like '%o%o%o%'
    and POBLA = 'Madrid';


-- Visualiza los nombres de alumnos de "Madrid" que tengan alguna asignatura suspendida

select asignaturas.cod, asignaturas.nombre, notas.nota ,alumnos.APENOM, alumnos.POBLA
from asignaturas, notas, alumnos
where notas.dni = alumnos.dni
    and notas.nota < 5
    and asignaturas.cod = notas.cod 
    and POBLA = 'Madrid' ;

>[!NOTE] >falla

-- Obtén el nombre y apellido de los alumnos que tengan nota en la asignatura con código 1.

select asignaturas.cod, notas.nota , 
  SUBSTR(alumnos.APENOM, 1, INSTR(alumnos.APENOM, ',') - 1) 'Apellido',
  SUBSTR(alumnos.APENOM, INSTR(alumnos.APENOM, ',') + 2) 'Nombre'
from asignaturas, notas, alumnos
where notas.cod = 1
    and (asignaturas.cod = notas.cod and notas.dni = alumnos.dni);

-- Visualiza los nombres de alumnos que tengan una nota entre 7 y 8 en la asignatura de "FOL".

select SUBSTR(alumnos.APENOM, INSTR(alumnos.APENOM, ',') + 2) "Nombre", notas.nota, asignaturas.NOMBRE
from alumnos,notas,asignaturas
where asignaturas.NOMBRE = 'FOL'
	and notas.nota between 7 and 8 
    and asignaturas.cod = notas.cod
    and notas.dni = alumnos.dni;


---------------------------------------------------------------------------

-- Cara2

-- !2

select * from EMPLE;
select round (avg (salario), 2) "Media de salario" from emple;

select count (COMISION) "nº comisiones no nulas" from emple;

select max(salario) "Salario maximo", min (salario) "Salario minimo" 
from emple
	where dept_no = 30;

-- !3

SELECT RPAD(REPLACE(titulo, '"', ''), 43, '.') 
FROM MISTEXTOS;

-- !4

SELECT LOWER(REPLACE(REPLACE(titulo, '"', ''), '.', '')) 
FROM MISTEXTOS;

-- !5

select autor "Autor",SUBSTR (autor,1, instr(autor,',') -1)"Apellido"
from libros;

-- !6

select autor "Autor", SUBSTR (autor,instr(autor,',') +1 )"Nombre"
from libros;

--------------------------------------------------------------------------

Hoja 4:

-- 1.1

select emple.apellido, count (emple.dept_no)
from emple
group by emple.apellido
having count (emple.dept_no)>4;

-- 1.2

select depart.dept_no, depart.dnombre, count(*) "Nº de empleados" from depart,emple
where depart.dept_no=emple.dept_no
group by depart.dept_no, depart.dnombre
having count(*) = (select max(count(*)) 
    from depart,emple 
    where depart.dept_no=emple.dept_no
    group by depart.dept_no, depart.dnombre)

-- 1.3

select emple.oficio, depart.dnombre, sum(emple.salario) "Suma de salarios" from depart, emple
where depart.dept_no = emple.dept_no  
group by emple.oficio, depart.dnombre
    having depart.dnombre = 'VENTAS';



-- 1.4 NO HACER

select emple.apellido 
from emple
	where emple.salario = (
    	select avg(e2.salario)
    	from emple e2
    	where e2.dept_no=emple.dept_no
    ); 


-- 1.5 


select depart.dnombre, emple.oficio, count(*)"Nº empleados" from depart, emple
where depart.dept_no = emple.dept_no  
group by depart.dnombre, emple.oficio
having emple.oficio = 'EMPLEADO'

--1.6. Desde de la tabla EMPLE, visualiza el departamento que tenga más empleados cuyo oficio sea 'EMPLEADO'

select depart.dnombre, emple.oficio,count(*) "Nº de empleados" from depart, emple
where depart.dept_no = emple.dept_no  
and emple.oficio = 'EMPLEADO'
group by depart.dnombre,emple.oficio
having count(*) = (select max(count(*)) from depart, emple
    where depart.dept_no = emple.dept_no  
    and emple.oficio = 'EMPLEADO'
group by depart.dnombre,emple.oficio)

--1.7. A partir de las tablas EMPLE y DEPART, visualiza el numero de departamento y el nombre de departamento que tenga más empleados cuyo oficio sea 'EMPLEADO'.

select depart.dept_no, depart.dnombre, count(*) "Nº de empleados"
from depart, emple
where depart.dept_no = emple.dept_no
and emple.oficio = 'EMPLEADO'
group by depart.dept_no, depart.dnombre
having count(*) = ( select max(count(*))
        from  depart, emple
        where depart.dept_no = emple.dept_no
        and emple.oficio = 'EMPLEADO'
        group by depart.dept_no)


-- 1.8

select depart.dnombre,emple.oficio, count (*) "nº trabajadores"
from depart,emple
	where depart.dept_no=emple.dept_no
group by  depart.dnombre,emple.oficio
    having count(*)>2
order by 3;
    

-- 2.1

select alum.nombre
from alum, antiguos, nuevos
where alum.nombre = antiguos.nombre
and alum.nombre = nuevos.nombre;


-- 2.3

select alum.nombre
from alum, antiguos, nuevos
where alum.nombre != antiguos.nombre
and alum.nombre != nuevos.nombre;


--3.1

select CENTROS.cod_centro, count (*) "Nº profes"
from CENTROS,PROFESORES
where CENTROS.cod_centro = PROFESORES.cod_centro 
group by CENTROS.cod_centro
order by 1;

select PROFESORES.especialidad, count (*) "Nº profes"
from PROFESORES
group by PROFESORES.especialidad
order by 1;

--3.2

select centros.cod_centro, count (personal.dni)
from centros
left join personal on centros.cod_centro = personal.cod_centro
group by  centros.cod_centro;

















